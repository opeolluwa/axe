services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.${ENV}
    ports: 
      - ${PORT}:${PORT}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
    networks:
      - internal
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:$PORT}/health"]  
      interval: 5s
      timeout: 7.5s
      retries: 10
      start_period: 30s
    volumes:
      - ./:/app
        
        
  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=axe_express_js
      - POSTGRES_USER=axe
      - POSTGRES_PASSWORD=axe
    ports:
      - "6543:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@axe.com
      PGADMIN_DEFAULT_PASSWORD: axe
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

networks:
  internal:
    name: axe-internal

volumes:
  postgres-data:
  pgadmin-data:
